// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mockrepo is a generated GoMock package.
package mockrepo

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repository "github.com/popooq/rodnoolee_birthday/internal/repository"
)

// MockUserRepo is a mock of UserRepo interface.
type MockUserRepo struct {
	ctrl     *gomock.Controller
	recorder *MockUserRepoMockRecorder
}

// MockUserRepoMockRecorder is the mock recorder for MockUserRepo.
type MockUserRepoMockRecorder struct {
	mock *MockUserRepo
}

// NewMockUserRepo creates a new mock instance.
func NewMockUserRepo(ctrl *gomock.Controller) *MockUserRepo {
	mock := &MockUserRepo{ctrl: ctrl}
	mock.recorder = &MockUserRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRepo) EXPECT() *MockUserRepoMockRecorder {
	return m.recorder
}

// GetAllBirthdays mocks base method.
func (m *MockUserRepo) GetAllBirthdays() ([]repository.Birthday, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllBirthdays")
	ret0, _ := ret[0].([]repository.Birthday)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllBirthdays indicates an expected call of GetAllBirthdays.
func (mr *MockUserRepoMockRecorder) GetAllBirthdays() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllBirthdays", reflect.TypeOf((*MockUserRepo)(nil).GetAllBirthdays))
}

// InsertBirthday mocks base method.
func (m *MockUserRepo) InsertBirthday(birthday repository.Birthday) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertBirthday", birthday)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertBirthday indicates an expected call of InsertBirthday.
func (mr *MockUserRepoMockRecorder) InsertBirthday(birthday interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertBirthday", reflect.TypeOf((*MockUserRepo)(nil).InsertBirthday), birthday)
}

// UpdateBirthday mocks base method.
func (m *MockUserRepo) UpdateBirthday(birthday repository.Birthday) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBirthday", birthday)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateBirthday indicates an expected call of UpdateBirthday.
func (mr *MockUserRepoMockRecorder) UpdateBirthday(birthday interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBirthday", reflect.TypeOf((*MockUserRepo)(nil).UpdateBirthday), birthday)
}
